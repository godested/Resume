{"version":3,"sources":["pages/Home/Hero/Background/styles.module.scss","pages/Home/Hero/styles.module.scss","pages/Home/Hero/Background/Scene.ts","core/shaders/planeVS.ts","core/shaders/planeFS.ts","pages/Home/Hero/Background/Plane.ts","pages/Home/Hero/Background/canvas.ts","pages/Home/Hero/Background/index.tsx","core/hooks/useWindowSize.ts","core/hooks/useScroll.ts","pages/Home/Hero/index.tsx","pages/Home/index.tsx"],"names":["module","exports","Scene","width","height","renderer","cameraAspect","camera","THREE","alpha","antialias","setSize","position","z","this","autoClearColor","render","newWidth","newHeight","aspect","updateProjectionMatrix","Plane","options","uniforms","geometry","material","mesh","slowingSpeed","u_amplitude","value","amplitude","u_frequency","frequency","u_resolution","resolution","u_time","sizeX","sizeY","segmentsX","segmentsY","vertexShader","planeVS","fragmentShader","planeFS","side","wireframe","rotation","x","dt","SIZE_X","SIZE_Y","SEGMENTS_X","SEGMENTS_Y","AMPLITUDE","FREQUENCY","SLOWING_SPEED","Background","ref","useRef","useState","window","innerWidth","innerHeight","size","useEffect","subscribe","addEventListener","removeEventListener","useWindowSize","scrollY","scrollPosition","setScrollPosition","useScrollY","root","composer","glitchPass","scene","plane","DELTA_TIME","LAST_TIME","Date","now","onWindowResize","clientWidth","clientHeight","update","init","setPixelRatio","devicePixelRatio","EffectComposer","add","addPass","RenderPass","GlitchPass","appendChild","domElement","animate","requestAnimationFrame","removeEventListeners","createGlitchCanvas","current","progress","Math","max","style","opacity","className","classes","Hero","useResume","lastname","firstname","profession","fullName","Section","Wrapper","Container","Typography","font","variant","weight","align","component","marginBottom","uppercase","Heading","Glitch","Title","Home","Page","title"],"mappings":"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","file":"static/js/completion.14195f15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"_63d26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"b1a97\",\"Container\":\"_0951c\",\"Heading\":\"d6a15\",\"Title\":\"c306e\"};","import * as THREE from 'three';\n\nexport class Scene extends THREE.Scene {\n  renderer: THREE.WebGLRenderer;\n\n  cameraAspect: number;\n\n  camera: THREE.PerspectiveCamera;\n\n  constructor(width: number, height: number) {\n    super();\n\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n    });\n    this.renderer.setSize(width, height);\n\n    this.cameraAspect = width / (height * 2.5);\n    this.camera = new THREE.PerspectiveCamera(55, this.cameraAspect, 1, 2000);\n    this.camera.position.z = 50;\n  }\n\n  render() {\n    this.renderer.autoClearColor = true;\n    this.renderer.render(this, this.camera);\n  }\n\n  resize(newWidth: number, newHeight: number) {\n    this.camera.aspect = this.cameraAspect;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setSize(newWidth, newHeight);\n  }\n}\n","export default `\nprecision highp float;\n\nuniform float\t  u_amplitude;\nuniform float \tu_frequency;\nuniform float   u_time;\n//\n// GLSL textureless classic 3D noise \"cnoise\",\n// with an RSL-style periodic variant \"pnoise\".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P) {\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nvoid main() {\n    float displacement = u_amplitude * cnoise( u_frequency * position + u_time );\n\n    vec3 newPosition = position + normal * displacement;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n}\n`;\n","export default `\nprecision highp float;\n\nuniform vec2 u_resolution;\n\nvoid main() {\n    vec2 p = gl_FragCoord.xy / u_resolution.xy - .4;\n    vec3 color1 = vec3(0.94,0.017,0.796);\n    vec3 color2 = vec3(0.384,0.015,0.749);\n\n    vec3 col = mix(color1, color2, p.y);\n\n    gl_FragColor = vec4(col, 1.0);\n}\n`;\n","import * as THREE from 'three';\nimport planeVS from 'core/shaders/planeVS';\nimport planeFS from 'core/shaders/planeFS';\n\ntype Resolution = [number, number];\n\ninterface ValueObject<T> {\n  value: T;\n}\n\ninterface Uniforms {\n  /* eslint-disable @typescript-eslint/camelcase */\n  u_amplitude: ValueObject<number>;\n  u_frequency: ValueObject<number>;\n  u_resolution: ValueObject<Resolution>;\n  u_time: ValueObject<number>;\n  /* eslint-enable */\n}\n\ninterface Options {\n  resolution: Resolution;\n  amplitude: number;\n  frequency: number;\n  sizeX: number;\n  sizeY: number;\n  segmentsX: number;\n  segmentsY: number;\n  slowingSpeed: number;\n}\n\nexport class Plane {\n  uniforms: Uniforms;\n\n  geometry: THREE.PlaneBufferGeometry;\n\n  material: THREE.ShaderMaterial;\n\n  mesh: THREE.Mesh;\n\n  slowingSpeed: number;\n\n  constructor(options: Options) {\n    this.uniforms = {\n      /* eslint-disable @typescript-eslint/camelcase */\n      u_amplitude: { value: options.amplitude },\n      u_frequency: { value: options.frequency },\n      u_resolution: { value: options.resolution },\n      u_time: { value: 0.0 },\n      /* eslint-enable */\n    };\n\n    this.geometry = new THREE.PlaneBufferGeometry(\n      options.sizeX,\n      options.sizeY,\n      options.segmentsX,\n      options.segmentsY\n    );\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: planeVS,\n      fragmentShader: planeFS,\n      side: THREE.DoubleSide,\n      wireframe: true,\n    });\n\n    this.slowingSpeed = options.slowingSpeed;\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.rotation.x = 360;\n  }\n\n  update(dt: number, resolution: Resolution) {\n    this.uniforms.u_time.value += dt / this.slowingSpeed;\n    this.uniforms.u_resolution.value = resolution;\n  }\n}\n","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { Scene } from './Scene';\nimport { Plane } from './Plane';\n\nconst SIZE_X = 250;\nconst SIZE_Y = 150;\nconst SEGMENTS_X = 190;\nconst SEGMENTS_Y = 100;\nconst AMPLITUDE = 10.0;\nconst FREQUENCY = 0.05;\nconst SLOWING_SPEED = 4600;\n\nexport function createGlitchCanvas(root: HTMLElement) {\n  let renderer: THREE.WebGLRenderer;\n  let composer: EffectComposer;\n  let glitchPass: GlitchPass;\n  let scene: Scene;\n  let plane: Plane;\n\n  let DELTA_TIME = 0;\n  let LAST_TIME = Date.now();\n\n  function onWindowResize() {\n    renderer.setSize(root.clientWidth, root.clientHeight);\n    composer.setSize(root.clientWidth, root.clientHeight);\n    plane.update(DELTA_TIME, [root.clientWidth, root.clientHeight]);\n  }\n\n  function init() {\n    renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(root.clientWidth, root.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    composer = new EffectComposer(renderer);\n\n    scene = new Scene(root.clientWidth, root.clientHeight);\n    plane = new Plane({\n      resolution: [root.clientWidth, root.clientHeight],\n      amplitude: AMPLITUDE,\n      frequency: FREQUENCY,\n      sizeX: SIZE_X,\n      sizeY: SIZE_Y,\n      segmentsX: SEGMENTS_X,\n      segmentsY: SEGMENTS_Y,\n      slowingSpeed: SLOWING_SPEED,\n    });\n\n    scene.add(plane.mesh);\n\n    composer.addPass(new RenderPass(scene, scene.camera));\n\n    glitchPass = new GlitchPass();\n    composer.addPass(glitchPass);\n\n    root.appendChild(renderer.domElement);\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    DELTA_TIME = Date.now() - LAST_TIME;\n    LAST_TIME = Date.now();\n    plane.update(DELTA_TIME, [root.clientWidth, root.clientHeight]);\n    composer.render(DELTA_TIME);\n  }\n\n  return {\n    init,\n    animate,\n    removeEventListeners() {\n      window.removeEventListener('resize', onWindowResize);\n    },\n  };\n}\n","import React, { useRef, useEffect } from 'react';\nimport { useWindowSize } from 'core/hooks/useWindowSize';\nimport { useScrollY } from 'core/hooks/useScroll';\nimport { createGlitchCanvas } from './canvas';\nimport classes from './styles.module.scss';\n\nexport function Background() {\n  const ref = useRef<HTMLDivElement>(null);\n  const { height } = useWindowSize();\n  const scrollY = useScrollY();\n\n  useEffect(() => {\n    const { init, animate, removeEventListeners } = createGlitchCanvas(\n      ref.current as HTMLElement\n    );\n\n    init();\n    animate();\n\n    return () => {\n      removeEventListeners();\n    };\n  }, []);\n\n  const progress = Math.max((height - scrollY) / height, 0);\n\n  return (\n    <div\n      style={{\n        opacity: progress,\n      }}\n      className={classes.Background}\n      ref={ref}\n    />\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    function subscribe() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener('resize', subscribe);\n\n    return () => window.removeEventListener('resize', subscribe);\n  }, []);\n\n  return size;\n}\n","import { useState, useEffect } from 'react';\n\nexport function useScrollY() {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    function subscribe() {\n      setScrollPosition(window.scrollY);\n    }\n\n    window.addEventListener('scroll', subscribe);\n\n    return () => window.removeEventListener('scroll', subscribe);\n  }, []);\n\n  return scrollPosition;\n}\n","import React from 'react';\nimport { Wrapper } from 'core/components/Wrapper';\nimport { Typography } from 'core/components/Typography';\nimport { Glitch } from 'core/components/Glitch';\nimport { useResume } from 'core/providers/Resume';\nimport { Background } from './Background';\nimport classes from './styles.module.scss';\n\nexport function Hero() {\n  const { lastname, firstname, profession } = useResume();\n\n  const fullName = `${lastname} ${firstname}`;\n\n  return (\n    <div className={classes.Section}>\n      <Background />\n      <Wrapper className={classes.Container}>\n        <Typography\n          font=\"secondary\"\n          variant=\"heading\"\n          weight=\"regular\"\n          align=\"center\"\n          component=\"h1\"\n          marginBottom=\"sm\"\n          uppercase\n          className={classes.Heading}\n        >\n          <Glitch>{fullName}</Glitch>\n        </Typography>\n        <Typography\n          variant=\"title\"\n          align=\"center\"\n          uppercase\n          weight=\"regular\"\n          className={classes.Title}\n        >\n          {profession}\n        </Typography>\n      </Wrapper>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Page } from 'core/components/Page';\nimport { Hero } from './Hero';\n\nexport default function Home() {\n  return (\n    <Page title=\"Home\">\n      <Hero />\n    </Page>\n  );\n}\n"],"sourceRoot":""}